version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: agentic_postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: agentic_service
      POSTGRES_USER: agentic_user
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-secure_password_change_me}
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --lc-collate=C --lc-ctype=C"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./docker/postgres/init:/docker-entrypoint-initdb.d
      - ./docker/postgres/backups:/backups
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U agentic_user -d agentic_service"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - agentic_network

  # Optional: Redis for caching (uncomment if needed)
  # redis:
  #   image: redis:7-alpine
  #   container_name: agentic_redis
  #   restart: unless-stopped
  #   ports:
  #     - "6379:6379"
  #   volumes:
  #     - redis_data:/data
  #   networks:
  #     - agentic_network

  # Optional: MinIO for S3-compatible file storage (uncomment if needed)
  # minio:
  #   image: minio/minio:latest
  #   container_name: agentic_minio
  #   restart: unless-stopped
  #   environment:
  #     MINIO_ROOT_USER: ${MINIO_ROOT_USER:-minioadmin}
  #     MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD:-minioadmin123}
  #   command: server /data --console-address ":9001"
  #   ports:
  #     - "9000:9000"
  #     - "9001:9001"
  #   volumes:
  #     - minio_data:/data
  #   networks:
  #     - agentic_network

volumes:
  postgres_data:
    driver: local
  # redis_data:
  #   driver: local
  # minio_data:
  #   driver: local

networks:
  agentic_network:
    driver: bridge

