name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8, 3.9, "3.10", "3.11"]

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y tesseract-ocr tesseract-ocr-chi-sim tesseract-ocr-eng
    
    - name: Install UV
      run: |
        curl -LsSf https://astral.sh/uv/install.sh | sh
        echo "$HOME/.cargo/bin" >> $GITHUB_PATH
    
    - name: Install dependencies
      run: |
        uv venv
        source .venv/bin/activate
        uv sync --extra dev
    
    - name: Lint with flake8
      run: |
        source .venv/bin/activate
        # Stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # Exit-zero treats all errors as warnings
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    
    - name: Type check with mypy
      run: |
        source .venv/bin/activate
        mypy langchain_agent/ --ignore-missing-imports
    
    - name: Test imports and basic functionality
      run: |
        source .venv/bin/activate
        python -c "
        from langchain_agent.agent import SimpleAgent
        from langchain_agent.language_utils import detect_language, get_system_prompt
        from langchain_agent.file_parser import parse_file
        print('✅ All imports successful')
        
        # Test language detection
        assert detect_language('你好世界') == 'Chinese'
        assert detect_language('Hello world') == 'English'
        print('✅ Language detection working')
        
        # Test system prompts
        chinese_prompt = get_system_prompt('Chinese')
        english_prompt = get_system_prompt('English')
        assert '专业' in chinese_prompt
        assert 'professional' in english_prompt
        print('✅ System prompts working')
        "

  security:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Run security scan
      run: |
        pip install bandit safety
        bandit -r langchain_agent/
        safety check --json

  build-docs:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Validate documentation
      run: |
        # Check if required documentation exists
        test -f README.md
        test -f README_CN.md
        test -f CONTRIBUTING.md
        test -f CHANGELOG.md
        test -f LICENSE
        echo "✅ All documentation files present"
        
        # Basic validation of README content
        grep -q "Enterprise Agentic Service" README.md
        grep -q "企业级智能代理服务" README_CN.md
        echo "✅ Documentation content validated"
