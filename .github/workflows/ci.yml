name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        # Project requires Python >=3.12 as specified in pyproject.toml
        # Note: Python 3.14 not yet available in GitHub Actions for Ubuntu 24.04
        python-version: ["3.12", "3.13"]

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install system dependencies
      run: |
        # Update package lists with timeout and retry
        timeout 300 bash -c '
          for i in {1..3}; do
            if sudo apt-get update; then
              break
            fi
            echo "Attempt $i failed, retrying..."
            sleep 5
          done
        '
        
        # Install tesseract with timeout and essential packages only
        timeout 600 sudo apt-get install -y --no-install-recommends \
          tesseract-ocr \
          tesseract-ocr-chi-sim \
          tesseract-ocr-eng || {
          echo "⚠️ Tesseract installation failed, continuing without OCR support..."
          echo "This is acceptable for basic functionality testing"
        }
    
    - name: Verify system dependencies
      run: |
        echo "🔍 Checking available system packages:"
        which python3 || echo "❌ Python3 not found"
        which uv || echo "❌ UV not found"
        which tesseract || echo "⚠️ Tesseract not available (OCR disabled)"
        
        echo "📦 Python packages that will be installed:"
        echo "- Core: fastapi, uvicorn, scikit-learn, PyMuPDF"
        echo "- Extras: python-docx, pytesseract (if tesseract available)"
        echo "- Dev: mypy, black, flake8, pytest"
    
    - name: Install UV
      run: |
        curl -LsSf https://astral.sh/uv/install.sh | sh
        echo "$HOME/.cargo/bin" >> $GITHUB_PATH
    
    - name: Install dependencies
      run: |
        echo "🔧 Creating virtual environment..."
        uv venv
        echo "📦 Installing dependencies..."
        uv sync --extra dev || {
          echo "⚠️ uv sync failed, trying uv pip install..."
          uv pip install -e ".[dev]"
        }
        echo "✅ Dependencies installed"
    
    - name: Verify virtual environment
      run: |
        echo "🔍 Checking virtual environment:"
        ls -la .venv/bin/
        echo "🐍 Checking Python:"
        .venv/bin/python --version
        echo "📦 Checking installed packages:"
        uv pip list
        echo "✅ Virtual environment ready"
    
    - name: Lint with flake8
      run: |
        # Use uv to run flake8 directly
        uv run flake8 langchain_agent/
    
    - name: Type check with mypy
      run: |
        uv run mypy langchain_agent/ --ignore-missing-imports
    
    - name: Test imports and basic functionality
      run: |
        uv run python -c "
        from langchain_agent.agent import SimpleAgent
        from langchain_agent.language_utils import detect_language, get_system_prompt
        from langchain_agent.file_parser import parse_file
        print('✅ All imports successful')
        
        # Test language detection
        assert detect_language('你好世界') == 'Chinese'
        assert detect_language('Hello world') == 'English'
        print('✅ Language detection working')
        
        # Test system prompts
        chinese_prompt = get_system_prompt('Chinese')
        english_prompt = get_system_prompt('English')
        assert '专业' in chinese_prompt
        assert 'professional' in english_prompt
        print('✅ System prompts working')
        "

  security:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python 3.12
      uses: actions/setup-python@v4
      with:
        python-version: "3.12"
    
    - name: Install UV
      run: |
        curl -LsSf https://astral.sh/uv/install.sh | sh
        echo "$HOME/.cargo/bin" >> $GITHUB_PATH
    
    - name: Install dependencies
      run: |
        echo "🔧 Creating virtual environment..."
        uv venv
        echo "📦 Installing dependencies..."
        uv sync --extra dev || {
          echo "⚠️ uv sync failed, trying uv pip install..."
          uv pip install -e ".[dev]"
        }
        echo "✅ Dependencies installed"
    
    - name: Run security scan
      run: |
        uv run bandit -r langchain_agent/
        uv run safety check --json

  build-docs:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python 3.12
      uses: actions/setup-python@v4
      with:
        python-version: "3.12"
    
    - name: Install UV
      run: |
        curl -LsSf https://astral.sh/uv/install.sh | sh
        echo "$HOME/.cargo/bin" >> $GITHUB_PATH
    
    - name: Install dependencies
      run: |
        echo "🔧 Creating virtual environment..."
        uv venv
        echo "📦 Installing dependencies..."
        uv sync || {
          echo "⚠️ uv sync failed, trying uv pip install..."
          uv pip install -e "."
        }
        echo "✅ Dependencies installed"
    
    - name: Validate documentation
      run: |
        # Check if required documentation exists
        test -f README.md
        test -f README_CN.md
        test -f CONTRIBUTING.md
        test -f CHANGELOG.md
        test -f LICENSE
        echo "✅ All documentation files present"
        
        # Basic validation of README content
        grep -q "Enterprise Agentic Service" README.md
        grep -q "企业级智能代理服务" README_CN.md
        echo "✅ Documentation content validated"
